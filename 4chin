#!/usr/bin/env python3
import os
import json
import requests
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("--thread")


def get_json(url):
    response = requests.get(url)
    data = json.loads(response.text)
    return data

def download_file(file_name, file_url):
    file_ext = file_url.split(".")[-1]
    try:
        with open(file_name + "." + file_ext, "wb") as file:
            response = requests.get(file_url)
            file.write(response.content)
            print("Saving {} as {}".format(file_url, file_name + "." + file_ext))
            return True
    
    except IOError:
        return False
    

def download_thread_4chan(board, thread_number):

    data = get_json("http://a.4cdn.org/" + board + "/thread/" + thread_number + ".json")
    
    dir_to_make = '4chan_' + board + '_' + data["posts"][0]["sub"].replace(" ", "_")
    if os.path.exists(dir_to_make):
        os.chdir(dir_to_make)
    else:
        os.mkdir(dir_to_make)
        os.chdir(dir_to_make)
    count = 0
    print("Parsing thread: {}".format(data["posts"][0]["sub"]))
    for i in data["posts"]:
        try:
            
            file_to_download = "http://i.4cdn.org/" + board + "/" + str(i["tim"]) + str(i["ext"])
            count = count + 1
            download_file(dir_to_make + "_" + str(count), file_to_download)
        except KeyError:
            return ""

args = parser.parse_args()
if (args.thread == "" or args.thread == None):
    print("You need to specify an url.")
    exit(-1)
else:
    url = args.thread
    if (url.startswith("https://boards.4chan.org") or url.startswith("http://boards.4chan.org") or url.startswith("https://boards.4channel.org") or url.startswith("https://boards.4channel.org")):
        url = url.split("/")
        thread = url[-1]
        board = url[3]
        download_thread_4chan(board, thread)


